--- ispcrt/cmake/ispc.cmake
+++ ispcrt/cmake/ispc.cmake
@@ -107,7 +107,15 @@ macro (ispc_compile)
   set(ISPC_TARGET_EXT ${CMAKE_CXX_OUTPUT_EXTENSION})
   string(REPLACE ";" "," ISPC_TARGET_ARGS "${ISPC_TARGETS}")
 
-  set(ISPC_ARCHITECTURE "x86-64")
+  if (CMAKE_SIZEOF_VOID_P EQUAL 8)
+    if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm64|aarch64")
+      set(ISPC_ARCHITECTURE "aarch64")
+    else()
+      set(ISPC_ARCHITECTURE "x86-64")
+    endif()
+  else()
+    set(ISPC_ARCHITECTURE "x86")
+  endif()
 
   set(ISPC_TARGET_DIR ${CMAKE_CURRENT_BINARY_DIR})
   include_directories(${ISPC_TARGET_DIR})
--- ispcrt/ispcrt.hpp
+++ ispcrt/ispcrt.hpp
@@ -218,6 +218,7 @@ template<AllocType alloc>
             ISPCRTNewMemoryViewFlags flags;
             flags.allocType = ISPCRT_ALLOC_TYPE_DEVICE;
             setHandle(ispcrtNewMemoryView(device.handle(), appMemory, size * sizeof(T), &flags));
+            ispcrtRelease(handle());
         }
 
 template<typename T, AllocType AT>
@@ -246,6 +247,7 @@ template<AllocType alloc>
             ISPCRTNewMemoryViewFlags flags;
             flags.allocType = ISPCRT_ALLOC_TYPE_SHARED;
             setHandle(ispcrtNewMemoryView(device.handle(), nullptr, size * sizeof(T), &flags));
+            ispcrtRelease(handle());
         }
 
 // Device-only methods
